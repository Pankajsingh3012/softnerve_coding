ans:1

def leader(arr,n):

    # last element as leader
    max = n-1
    
    # cheaking leader in array
    for x in range(n-1,-1,-1):
        if arr[x-1]> arr[x]:
          continue

	# assing leader index to max
        if arr[x]> arr[max]:
            max = x

    return arr[max:]

print(leader([7,10,4,10,6,5,2],7))




ans :2

def maxProfit(prices, n):
    buy = prices[0]
    max_profit = 0
    for i in range(1, n):

        # Checking for lower buy value
        if (buy > prices[i]):
            buy = prices[i]

        # Checking for higher profit
        elif (prices[i] - buy > max_profit):
            max_profit = prices[i] - buy
    return max_profit

print(maxProfit([7,1,5,3,6,4],6))





ans :3

def xorSum(arr, n):
    bits = 0

    # Finding bitwise OR of all elements
    for i in range(n):
        bits |= arr[i]

    ans = bits * pow(2, n - 1)

    return ans

print(xorSum([5,1,6],3))
